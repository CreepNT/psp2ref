#ifndef __REF_SDIF_H__
#define __REF_SDIF_H__

#include "types.h"

/**
 * Standard SD Host Controller register layout.
 * Kermit's SDIF controller follows this standardized layout.
 * Refer to "SD Specifications Part A2: SD Host Controller" for more details.
 */
struct _sd_host_controller {
	union {
		uint32_t SDMASystemAddress;
		uint32_t Argument2;
	};
	uint16_t BlockSize;
	uint16_t BlockCount;
	uint32_t Argument1;
	uint16_t TransferMode;
	uint16_t Command;
	uint32_t Response[4];
	uint32_t BufferDataPort; /* N.B.: access size is important! */
	uint32_t PresentState;
	uint8_t HostControl1;
	uint8_t PowerControl;
	uint8_t BlockGapControl;
	uint8_t WakeupControl;
	uint16_t ClockControl;
	uint8_t TimeoutControl;
	uint8_t SoftwareReset;
	uint16_t NormalInterruptStatus;
	uint16_t ErrorInterruptStatus;
	uint16_t NormalInterruptStatusEnable;
	uint16_t ErrorInterruptStatusEnable;
	uint16_t NormalInterruptSignalEnable;
	uint16_t ErrorInterruptSignalEnable;
	uint16_t AutoCMDErrorStatus;
	uint16_t HostControl2;
	uint32_t Capabilities[2];
	uint32_t MaximumCurrentCapabilities[2];
	uint16_t ForceEvent_AutoCMDErrorStatus;
	uint16_t ForceEvent_ErrorInterruptStatus;
	uint8_t ADMAErrorStatus;
	uint8_t RESERVED_0x55[3];
	/* 64-bit address, but only 32-bit ADMA2 is supported */
	uint32_t ADMASystemAddress[2];
	uint16_t PresetValue[8];
	uint32_t RESERVED_0x70[28];
	uint32_t SharedBusControl;
	uint32_t RESERVED_0xE4[6];
	uint16_t SlotInterruptStatus;
	uint16_t HostControllerVersion;
};
typedef volatile struct _sd_host_controller SceSdifReg;

/**
 * CMSIS-style register definitions for SDIF
 */
#define SDIF0_BASE 0xE0B00000
#define SDIF1_BASE 0xE0C00000
#define SDIF2_BASE 0xE0C10000
#define SDIF3_BASE 0xE0C20000

/* BlockSize register (offset: 0x4) */
#define SDHC_BLOCK_SIZE_TRANSFER_BLOCK_SIZE_Pos		(0U)
#define SDHC_BLOCK_SIZE_TRANSFER_BLOCK_SIZE_Msk		(0xFFFU << SDHC_BLOCK_SIZE_TRANSFER_BLOCK_SIZE_Pos)

#define SDHC_BLOCK_SIZE_HOST_SDMA_BOUNDARY_Pos		(12U)
#define SDHC_BLOCK_SIZE_HOST_SDMA_BOUNDARY_Msk		(0x7U << SDHC_BLOCK_SIZE_HOST_SDMA_BOUNDARY_Pos)
#define SDHC_BLOCK_SIZE_HOST_SDMA_BOUNDARY_4K		(0x0U << SDHC_BLOCK_SIZE_HOST_SDMA_BOUNDARY_Pos)
#define SDHC_BLOCK_SIZE_HOST_SDMA_BOUNDARY_8K		(0x1U << SDHC_BLOCK_SIZE_HOST_SDMA_BOUNDARY_Pos)
#define SDHC_BLOCK_SIZE_HOST_SDMA_BOUNDARY_16K		(0x2U << SDHC_BLOCK_SIZE_HOST_SDMA_BOUNDARY_Pos)
#define SDHC_BLOCK_SIZE_HOST_SDMA_BOUNDARY_32K		(0x3U << SDHC_BLOCK_SIZE_HOST_SDMA_BOUNDARY_Pos)
#define SDHC_BLOCK_SIZE_HOST_SDMA_BOUNDARY_64K		(0x4U << SDHC_BLOCK_SIZE_HOST_SDMA_BOUNDARY_Pos)
#define SDHC_BLOCK_SIZE_HOST_SDMA_BOUNDARY_128K		(0x5U << SDHC_BLOCK_SIZE_HOST_SDMA_BOUNDARY_Pos)
#define SDHC_BLOCK_SIZE_HOST_SDMA_BOUNDARY_256K		(0x6U << SDHC_BLOCK_SIZE_HOST_SDMA_BOUNDARY_Pos)
#define SDHC_BLOCK_SIZE_HOST_SDMA_BOUNDARY_512K		SDHC_BLOCK_SIZE_HOST_SDMA_BOUNDARY_Msk


/* TransferMode register (offset: 0xC) */
#define SDHC_TRANSFER_MODE_DMA_ENABLE_Pos		(0U)
#define SDHC_TRANSFER_MODE_DMA_ENABLE_Msk		(0x1U << SDHC_TRANSFER_MODE_DMA_ENABLE_Pos)
#define SDHC_TRANSFER_MODE_DMA_DISABLE			(0x00000000U)
#define SDHC_TRANSFER_MODE_DMA_ENABLE			SDHC_TRANSFER_MODE_DMA_ENABLE_Msk

#define SDHC_TRANSFER_MODE_BLOCK_COUNT_ENABLE_Pos	(1U)
#define SDHC_TRANSFER_MODE_BLOCK_COUNT_ENABLE_Msk	(0x1U << SDHC_TRANSFER_MODE_BLOCK_COUNT_ENABLE_Pos)
#define SDHC_TRANSFER_MODE_BLOCK_COUNT_DISABLE		(0x00000000U)
#define SDHC_TRANSFER_MODE_BLOCK_COUNT_ENABLE		SDHC_TRANSFER_MODE_BLOCK_COUNT_ENABLE_Msk

#define SDHC_TRANSFER_MODE_AUTO_CMD12_ENABLE_Pos	(2U)
#define SDHC_TRANSFER_MODE_AUTO_CMD12_ENABLE_Msk	(0x1U << SDHC_TRANSFER_MODE_AUTO_CMD12_ENABLE_Pos)
#define SDHC_TRANSFER_MODE_AUTO_CMD12_DISABLE		(0x00000000U)
#define SDHC_TRANSFER_MODE_AUTO_CMD12_ENABLE		SDHC_TRANSFER_MODE_AUTO_CMD12_ENABLE_Msk

#define SDHC_TRANSFER_MODE_DATA_TRANSFER_DIRECTION_Pos	(4U)
#define SDHC_TRANSFER_MODE_DATA_TRANSFER_DIRECTION_Msk	(0x1U << SDHC_TRANSFER_MODE_DATA_TRANSFER_DIRECTION_Pos)
#define SDHC_TRANSFER_MODE_DATA_DIRECTION_READ		(0x0U << SDHC_TRANSFER_MODE_DATA_TRANSFER_DIRECTION_Pos)
#define SDHC_TRANSFER_MODE_DATA_DIRECTION_WRITE		SDHC_TRANSFER_MODE_DATA_TRANSFER_DIRECTION_Msk

#define SDHC_TRANSFER_MODE_MULTI_BLOCK_SELECT_Pos	(5U)
#define SDHC_TRANSFER_MODE_MULTI_BLOCK_SELECT_Msk	(0x1U << SDHC_TRANSFER_MODE_MULTI_BLOCK_SELECT_Pos)
#define SDHC_TRANSFER_MODE_SINGLE_BLOCK			(0x00000000U)
#define SDHC_TRANSFER_MODE_MULTI_BLOCK			SDHC_TRANSFER_MODE_MULTI_BLOCK_SELECT_Msk


/* Command register (offset: 0xE) */
#define SDHC_COMMAND_RESPONSE_TYPE_Pos			(0U)
#define SDHC_COMMAND_RESPONSE_TYPE_Msk			(0x3U << SDHC_COMMAND_RESPONSE_TYPE_Pos)
#define SDHC_COMMAND_RESPONSE_TYPE_NONE			(0x00000000U)
#define SDHC_COMMAND_RESPONSE_TYPE_L136			(0x1U << SDHC_COMMAND_RESPONSE_TYPE_Pos)	/* Response Length 136 */
#define SDHC_COMMAND_RESPONSE_TYPE_L48			(0x2U << SDHC_COMMAND_RESPONSE_TYPE_Pos)	/* Response Length 48 */
#define SDHC_COMMAND_RESPONSE_TYPE_L48_CHECK_BUSY	SDHC_COMMAND_RESPONSE_TYPE_Msk 			/* Response Length 48 + check Busy after response */

#define SDHC_COMMAND_CRC_CHECK_ENABLE_Pos		(3U)
#define SDHC_COMMAND_CRC_CHECK_ENABLE_Msk		(0x1U << SDHC_COMMAND_CRC_CHECK_ENABLE_Pos)

#define SDHC_COMMAND_INDEX_CHECK_ENABLE_Pos		(4U)
#define SDHC_COMMAND_INDEX_CHECK_ENABLE_Msk		(0x1U << SDHC_COMMAND_INDEX_CHECK_ENABLE_Pos)

#define SDHC_COMMAND_DATA_PRESENT_SELECT_Pos		(5U)
#define SDHC_COMMAND_DATA_PRESENT_SELECT_Msk		(0x1U << SDHC_COMMAND_DATA_PRESENT_SELECT_Pos)
#define SDHC_COMMAND_DATA_PRESENT_NO			(0x00000000U)
#define SDHC_COMMAND_DATA_PRESENT_YES			SDHC_COMMAND_DATA_PRESENT_SELECT_Msk

#define SDHC_COMMAND_COMMAND_TYPE_Pos			(6U)
#define SDHC_COMMAND_COMMAND_TYPE_Msk			(0x3U << SDHC_COMMAND_COMMAND_TYPE_Pos)
#define SDHC_COMMAND_COMMAND_TYPE_NORMAL		(0x0U << SDHC_COMMAND_COMMAND_TYPE_Pos)
#define SDHC_COMMAND_COMMAND_TYPE_SUSPEND		(0x1U << SDHC_COMMAND_COMMAND_TYPE_Pos)
#define SDHC_COMMAND_COMMAND_TYPE_RESUME		(0x2U << SDHC_COMMAND_COMMAND_TYPE_Pos)
#define SDHC_COMMAND_COMMAND_TYPE_ABORT			SDHC_COMMAND_COMMAND_TYPE_Msk

#define SDHC_COMMAND_COMMAND_INDEX_Pos			(8U)
#define SDHC_COMMAND_COMMAND_INDEX_Msk			(0x3FU << SDHC_COMMAND_COMMAND_INDEX_Pos)


/* PresentState register (offset: 0x24) */
#define SDHC_PRESENT_STATE_CMD_INHIBIT_CMD_Pos		(0U)
#define SDHC_PRESENT_STATE_CMD_INHIBIT_CMD_Msk		(0x1U << SDHC_PRESENT_STATE_CMD_INHIBIT_CMD_Pos)
#define SDHC_PRESENT_STATE_CMD_NOT_INHIBITED		(0x00000000U)
#define SDHC_PRESENT_STATE_CMD_INHIBITED		SDHC_PRESENT_STATE_CMD_INHIBIT_CMD_Msk

#define SDHC_PRESENT_STATE_CMD_INHIBIT_DAT_Pos		(1U)
#define SDHC_PRESENT_STATE_CMD_INHIBIT_DAT_Msk		(0x1U << SDHC_PRESENT_STATE_CMD_INHIBIT_DAT_Pos)
#define SDHC_PRESENT_STATE_DAT_NOT_INHIBITED		(0x00000000U)
#define SDHC_PRESENT_STATE_DAT_INHIBITED		SDHC_PRESENT_STATE_CMD_INHIBIT_DAT_Msk

#define SDHC_PRESENT_STATE_DAT_LINE_ACTIVE_Pos		(2U)
#define SDHC_PRESENT_STATE_DAT_LINE_ACTIVE_Msk		(0x1U << SDHC_PRESENT_STATE_DAT_LINE_ACTIVE_Pos)

#define SDHC_PRESENT_STATE_RETUNING_REQUEST_Pos		(3U)
#define SDHC_PRESENT_STATE_RETUNING_REQUEST_Msk		(0x1U << SDHC_PRESENT_STATE_RETUNING_REQUEST_Pos)

#define SDHC_PRESENT_STATE_WRITE_TRANSFER_ACTIVE_Pos	(8U)
#define SDHC_PRESENT_STATE_WRITE_TRANSFER_ACTIVE_Msk	(0x1U << SDHC_PRESENT_STATE_WRITE_TRANSFER_ACTIVE_Pos)

#define SDHC_PRESENT_STATE_READ_TRANSFER_ACTIVE_Pos	(9U)
#define SDHC_PRESENT_STATE_READ_TRANSFER_ACTIVE_Msk	(0x1U << SDHC_PRESENT_STATE_READ_TRANSFER_ACTIVE_Pos)

#define SDHC_PRESENT_STATE_BUFFER_WRITE_ENABLE_Pos	(10U)
#define SDHC_PRESENT_STATE_BUFFER_WRITE_ENABLE_Msk	(0x1U << SDHC_PRESENT_STATE_BUFFER_WRITE_ENABLE_Pos)
#define SDHC_PRESENT_STATE_BUFFER_WRITE_DISABLED	(0x00000000U)
#define SDHC_PRESENT_STATE_BUFFER_WRITE_ENABLED		SDHC_PRESENT_STATE_BUFFER_WRITE_ENABLE_Msk

#define SDHC_PRESENT_STATE_BUFFER_READ_ENABLE_Pos	(11U)
#define SDHC_PRESENT_STATE_BUFFER_READ_ENABLE_Msk	(0x1U << SDHC_PRESENT_STATE_BUFFER_READ_ENABLE_Pos)
#define SDHC_PRESENT_STATE_BUFFER_READ_DISABLED		(0x00000000U)
#define SDHC_PRESENT_STATE_BUFFER_READ_ENABLED		SDHC_PRESENT_STATE_BUFFER_READ_ENABLE_Msk

#define SDHC_PRESENT_STATE_CARD_INSERTED_Pos		(16U)
#define SDHC_PRESENT_STATE_CARD_INSERTED_Msk		(0x1U << SDHC_PRESENT_STATE_CARD_INSERTED_Pos)
#define SDHC_PRESENT_STATE_CARD_NOT_INSERTED		(0x00000000U)
#define SDHC_PRESENT_STATE_CARD_INSERTED		SDHC_PRESENT_STATE_CARD_INSERTED_Msk

#define SDHC_PRESENT_STATE_CARD_STATE_STABLE_Pos	(17U)
#define SDHC_PRESENT_STATE_CARD_STATE_STABLE_Msk	(0x1U << SDHC_PRESENT_STATE_CARD_STATE_STABLE_Pos)
#define SDHC_PRESENT_STATE_CARD_STATE_NOT_STABLE	(0x00000000U)
#define SDHC_PRESENT_STATE_CARD_STATE_STABLE		SDHC_PRESENT_STATE_CARD_STATE_STABLE_Msk

#define SDHC_PRESENT_STATE_CARD_DETECT_PIN_LEVEL_Pos	(18U)
#define SDHC_PRESENT_STATE_CARD_DETECT_PIN_LEVEL_Msk	(0x1U << SDHC_PRESENT_STATE_CARD_DETECT_PIN_LEVEL_Pos)
#define SDHC_PRESENT_STATE_CARD_DETECT_CARD_NOT_PRESENT	(0x00000000U)
#define SDHC_PRESENT_STATE_CARD_DETECT_CARD_PRESENT	SDHC_PRESENT_STATE_CARD_DETECT_PIN_LEVEL_Msk

#define SDHC_PRESENT_STATE_WRITE_PROTECT_SWITCH_Pos	(19U)
#define SDHC_PRESENT_STATE_WRITE_PROTECT_SWITCH_Msk	(0x1U << SDHC_PRESENT_STATE_WRITE_PROTECT_SWITCH_Pos)
#define SDHC_PRESENT_STATE_WRITE_PROTECT_ENABLED	(0x00000000U)
#define SDHC_PRESENT_STATE_WRITE_PROTECT_DISABLED	SDHC_PRESENT_STATE_WRITE_PROTECT_SWITCH_Msk

#define SDHC_PRESENT_STATE_DAT_STATUS_Pos		(20U)
#define SDHC_PRESENT_STATE_DAT_STATUS_Msk		(0xFU << SDHC_PRESENT_STATE_DAT_STATUS_Pos)

#define SDHC_PRESENT_STATE_CMD_LINE_SIGNAL_LEVEL_Pos	(24U)
#define SDHC_PRESENT_STATE_CMD_LINE_SIGNAL_LEVEL_Msk	(0x1U << SDHC_PRESENT_STATE_CMD_LINE_SIGNAL_LEVEL_Pos)

/* HostControl1 register (offset: 0x28) */
#define SDHC_HOST_CONTROL1_LED_CONTROL_Pos		(0U)
#define SDHC_HOST_CONTROL1_LED_CONTROL_Msk		(0x1U << SDHC_HOST_CONTROL1_LED_CONTROL_Pos)
#define SDHC_HOST_CONTROL1_LED_CONTROL_OFF		(0x00000000U)
#define SDHC_HOST_CONTROL1_LED_CONTROL_ON		SDHC_HOST_CONTROL1_LED_CONTROL_Msk

#define SDHC_HOST_CONTROL1_DATA_TRANSFER_WIDTH_Pos	(1U)
#define SDHC_HOST_CONTROL1_DATA_TRANSFER_WIDTH_Msk	(0x1U << SDHC_HOST_CONTROL1_DATA_TRANSFER_WIDTH_Pos)
#define SDHC_HOST_CONTROL1_DATA_TRANSFER_WIDTH_1BIT	(0x00000000U)
#define SDHC_HOST_CONTROL1_DATA_TRANSFER_WIDTH_4BIT	SDHC_HOST_CONTROL1_DATA_TRANSFER_WIDTH_Msk

#define SDHC_HOST_CONTROL1_HIGH_SPEED_ENABLE_Pos	(2U)
#define SDHC_HOST_CONTROL1_HIGH_SPEED_ENABLE_Msk	(0x1U << SDHC_HOST_CONTROL1_HIGH_SPEED_ENABLE_Pos)
#define SDHC_HOST_CONTROL1_HIGH_SPEED_DISABLE		(0x00000000U)
#define SDHC_HOST_CONTROL1_HIGH_SPEED_ENABLE		SDHC_HOST_CONTROL1_HIGH_SPEED_ENABLE_Msk

#define SDHC_HOST_CONTROL1_DMA_SELECT_Pos		(3U)
#define SDHC_HOST_CONTROL1_DMA_SELECT_Msk		(0x3U << SDHC_HOST_CONTROL1_DMA_SELECT_Pos)
#define SDHC_HOST_CONTROL1_DMA_SELECT_SDMA		(0x0U << SDHC_HOST_CONTROL1_DMA_SELECT_Pos)
#define SDHC_HOST_CONTROL1_DMA_SELECT_ADMA2_32BIT	(0x2U << SDHC_HOST_CONTROL1_DMA_SELECT_Pos)

#define SDHC_HOST_CONTROL1_EXTENDED_DATA_WIDTH_Pos	(5U)
#define SDHC_HOST_CONTROL1_EXTENDED_DATA_WIDTH_Msk	(0x1U << SDHC_HOST_CONTROL1_EXTENDED_DATA_WIDTH_Pos)
#define SDHC_HOST_CONTROL1_EXTENDED_DATA_WIDTH_OFF	(0x00000000U)					/* Bus width selected by Data Transfer Width */
#define SDHC_HOST_CONTROL1_EXTENDED_DATA_WIDTH_ON	SDHC_HOST_CONTROL1_EXTENDED_DATA_WIDTH_Msk	/* 8-bit bus width */

#define SDHC_HOST_CONTROL1_CARD_DETECT_TEST_LEVEL_Pos	(6U)
#define SDHC_HOST_CONTROL1_CARD_DETECT_TEST_LEVEL_Msk	(0x1U << SDHC_HOST_CONTROL1_CARD_DETECT_TEST_LEVEL_Pos)

#define SDHC_HOST_CONTROL1_CARD_DETECT_SIGNAL_LEVEL_Pos	(7U)
#define SDHC_HOST_CONTROL1_CARD_DETECT_SIGNAL_LEVEL_Msk	(0x1U << SDHC_HOST_CONTROL1_CARD_DETECT_SIGNAL_LEVEL_Pos)


/* PowerControl register (offset: 0x29) */
#define SDHC_POWER_CONTROL_SD_BUS_POWER_Pos		(0U)
#define SDHC_POWER_CONTROL_SD_BUS_POWER_Msk		(0x1U << SDHC_POWER_CONTROL_SD_BUS_POWER_Pos)
#define SDHC_POWER_CONTROL_SD_BUS_POWER_OFF		(0x00000000U)
#define SDHC_POWER_CONTROL_SD_BUS_POWER_ON		SDHC_POWER_CONTROL_SD_BUS_POWER_Msk

#define SDHC_POWER_CONTROL_SD_BUS_VOLTAGE_SELECT_Pos	(1U)
#define SDHC_POWER_CONTROL_SD_BUS_VOLTAGE_SELECT_Msk	(0x7U << SDHC_POWER_CONTROL_SD_BUS_VOLTAGE_SELECT_Pos)
#define SDHC_POWER_CONTROL_SD_BUS_VOLTAGE_SELECT_1V8	(0x5U << SDHC_POWER_CONTROL_SD_BUS_VOLTAGE_SELECT_Pos)
#define SDHC_POWER_CONTROL_SD_BUS_VOLTAGE_SELECT_3V0	(0x6U << SDHC_POWER_CONTROL_SD_BUS_VOLTAGE_SELECT_Pos)
#define SDHC_POWER_CONTROL_SD_BUS_VOLTAGE_SELECT_3V3	SDHC_POWER_CONTROL_SD_BUS_VOLTAGE_SELECT_Msk


/* ClockControl register (offset: 0x2C) */
#define SDHC_CLOCK_CONTROL_INTERNAL_CLOCK_ENABLE_Pos	(0U)
#define SDHC_CLOCK_CONTROL_INTERNAL_CLOCK_ENABLE_Msk	(0x1U << SDHC_CLOCK_CONTROL_INTERNAL_CLOCK_ENABLE_Pos)
#define SDHC_CLOCK_CONTROL_INTERNAL_CLOCK_DISABLE	(0x00000000U)
#define SDHC_CLOCK_CONTROL_INTERNAL_CLOCK_ENABLE	SDHC_CLOCK_CONTROL_INTERNAL_CLOCK_ENABLE_Msk

#define SDHC_CLOCK_CONTROL_INTERNAL_CLOCK_STABLE_Pos	(1U)
#define SDHC_CLOCK_CONTROL_INTERNAL_CLOCK_STABLE_Msk	(0x1U << SDHC_CLOCK_CONTROL_INTERNAL_CLOCK_STABLE_Pos)
#define SDHC_CLOCK_CONTROL_INTERNAL_CLOCK_NOT_STABLE	(0x00000000U)
#define SDHC_CLOCK_CONTROL_INTERNAL_CLOCK_STABLE	SDHC_CLOCK_CONTROL_INTERNAL_CLOCK_STABLE_Msk

#define SDHC_CLOCK_CONTROL_SD_CLOCK_ENABLE_Pos		(2U)
#define SDHC_CLOCK_CONTROL_SD_CLOCK_ENABLE_Msk		(0x1U << SDHC_CLOCK_CONTROL_SD_CLOCK_ENABLE_Pos)
#define SDHC_CLOCK_CONTROL_SD_CLOCK_DISABLE		(0x00000000U)
#define SDHC_CLOCK_CONTROL_SD_CLOCK_ENABLE		SDHC_CLOCK_CONTROL_SD_CLOCK_ENABLE_Msk

#define SDHC_CLOCK_CONTROL_SDCLK_FREQ_SELECT_Pos	(8U)
#define SDHC_CLOCK_CONTROL_SDCLK_FREQ_SELECT_Msk	(0xFFU << SDHC_CLOCK_CONTROL_SDCLK_FREQ_SELECT_Pos)
#define SDHC_CLOCK_CONTROL_SDCLK_FREQ_BASECLK		(0x00U << SDHC_CLOCK_CONTROL_SDCLK_FREQ_SELECT_Pos)
#define SDHC_CLOCK_CONTROL_SDCLK_FREQ_BASECLK_DIV_2	(0x01U << SDHC_CLOCK_CONTROL_SDCLK_FREQ_SELECT_Pos)
#define SDHC_CLOCK_CONTROL_SDCLK_FREQ_BASECLK_DIV_4	(0x02U << SDHC_CLOCK_CONTROL_SDCLK_FREQ_SELECT_Pos)
#define SDHC_CLOCK_CONTROL_SDCLK_FREQ_BASECLK_DIV_8	(0x04U << SDHC_CLOCK_CONTROL_SDCLK_FREQ_SELECT_Pos)
#define SDHC_CLOCK_CONTROL_SDCLK_FREQ_BASECLK_DIV_16	(0x08U << SDHC_CLOCK_CONTROL_SDCLK_FREQ_SELECT_Pos)
#define SDHC_CLOCK_CONTROL_SDCLK_FREQ_BASECLK_DIV_32	(0x10U << SDHC_CLOCK_CONTROL_SDCLK_FREQ_SELECT_Pos)
#define SDHC_CLOCK_CONTROL_SDCLK_FREQ_BASECLK_DIV_64	(0x20U << SDHC_CLOCK_CONTROL_SDCLK_FREQ_SELECT_Pos)
#define SDHC_CLOCK_CONTROL_SDCLK_FREQ_BASECLK_DIV_128	(0x40U << SDHC_CLOCK_CONTROL_SDCLK_FREQ_SELECT_Pos)
#define SDHC_CLOCK_CONTROL_SDCLK_FREQ_BASECLK_DIV_256	(0x80U << SDHC_CLOCK_CONTROL_SDCLK_FREQ_SELECT_Pos)


/* TimeoutControl register (offset: 0x2E) */
#define SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_Pos		(0U)
#define SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_Msk		(0xFU << SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_Pos)
#define SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_2_13		(0x0U << SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_Pos) /* (2^13 x TMCLK) */
#define SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_2_14		(0x1U << SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_Pos) /* (2^14 x TMCLK) */
#define SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_2_15		(0x2U << SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_Pos) /* (2^15 x TMCLK) */
#define SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_2_16		(0x3U << SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_Pos) /* (2^16 x TMCLK) */
#define SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_2_17		(0x4U << SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_Pos) /* (2^17 x TMCLK) */
#define SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_2_18		(0x5U << SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_Pos) /* (2^18 x TMCLK) */
#define SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_2_19		(0x6U << SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_Pos) /* (2^19 x TMCLK) */
#define SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_2_20		(0x7U << SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_Pos) /* (2^20 x TMCLK) */
#define SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_2_21		(0x8U << SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_Pos) /* (2^21 x TMCLK) */
#define SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_2_22		(0x9U << SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_Pos) /* (2^22 x TMCLK) */
#define SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_2_23		(0xAU << SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_Pos) /* (2^23 x TMCLK) */
#define SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_2_24		(0xBU << SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_Pos) /* (2^24 x TMCLK) */
#define SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_2_25		(0xCU << SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_Pos) /* (2^25 x TMCLK) */
#define SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_2_26		(0xDU << SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_Pos) /* (2^26 x TMCLK) */
#define SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_2_27		(0xEU << SDHC_TIMEOUT_CONTROL_DATA_TIMEOUT_Pos) /* (2^27 x TMCLK) */

/* SoftwareReset register (offset: 0x2F) */
#define SDHC_SOFTWARE_RESET_ALL_Pos			(0U)
#define SDHC_SOFTWARE_RESET_ALL_Msk			(0x1U << SDHC_SOFTWARE_RESET_ALL_Pos)
#define SDHC_SOFTWARE_RESET_ALL				SDHC_SOFTWARE_RESET_ALL_Msk

#define SDHC_SOFTWARE_RESET_CMD_LINE_Pos		(1U)
#define SDHC_SOFTWARE_RESET_CMD_LINE_Msk		(0x1U << SDHC_SOFTWARE_RESET_CMD_LINE_Pos)
#define SDHC_SOFTWARE_RESET_CMD_LINE			SDHC_SOFTWARE_RESET_CMD_LINE_Msk

#define SDHC_SOFTWARE_RESET_DAT_LINE_Pos		(2U)
#define SDHC_SOFTWARE_RESET_DAT_LINE_Msk		(0x1U << SDHC_SOFTWARE_RESET_DAT_LINE_Pos)
#define SDHC_SOFTWARE_RESET_DAT_LINE			SDHC_SOFTWARE_RESET_DAT_LINE_Msk

/* NormalInterruptStatus register (offset: 0x30) */
#define SDHC_NORMAL_IRQ_STATUS_CMD_COMPLETE_Pos		(0U)
#define SDHC_NORMAL_IRQ_STATUS_CMD_COMPLETE_Msk		(0x1U << SDHC_NORMAL_IRQ_STATUS_CMD_COMPLETE_Pos)
#define SDHC_NORMAL_IRQ_STATUS_CMD_COMPLETE		SDHC_NORMAL_IRQ_STATUS_CMD_COMPLETE_Msk

#define SDHC_NORMAL_IRQ_STATUS_TFR_COMPLETE_Pos		(1U)
#define SDHC_NORMAL_IRQ_STATUS_TFR_COMPLETE_Msk		(0x1U << SDHC_NORMAL_IRQ_STATUS_TFR_COMPLETE_Pos)
#define SDHC_NORMAL_IRQ_STATUS_TFR_COMPLETE		SDHC_NORMAL_IRQ_STATUS_TFR_COMPLETE_Msk

#define SDHC_NORMAL_IRQ_STATUS_BLOCK_GAP_EVENT_Pos	(2U)
#define SDHC_NORMAL_IRQ_STATUS_BLOCK_GAP_EVENT_Msk	(0x1U << SDHC_NORMAL_IRQ_STATUS_BLOCK_GAP_EVENT_Pos)
#define SDHC_NORMAL_IRQ_STATUS_BLOCK_GAP_EVENT		SDHC_NORMAL_IRQ_STATUS_BLOCK_GAP_EVENT_Msk

#define SDHC_NORMAL_IRQ_STATUS_DMA_INTERRUPT_Pos	(3U)
#define SDHC_NORMAL_IRQ_STATUS_DMA_INTERRUPT_Msk	(0x1U << SDHC_NORMAL_IRQ_STATUS_DMA_INTERRUPT_Pos)
#define SDHC_NORMAL_IRQ_STATUS_DMA_INTERRUPT		SDHC_NORMAL_IRQ_STATUS_DMA_INTERRUPT_Msk

#define SDHC_NORMAL_IRQ_STATUS_BUFFER_WRITE_READY_Pos	(4U)
#define SDHC_NORMAL_IRQ_STATUS_BUFFER_WRITE_READY_Msk	(0x1U << SDHC_NORMAL_IRQ_STATUS_BUFFER_WRITE_READY_Pos)
#define SDHC_NORMAL_IRQ_STATUS_BUFFER_WRITE_READY	SDHC_NORMAL_IRQ_STATUS_BUFFER_WRITE_READY_Msk

#define SDHC_NORMAL_IRQ_STATUS_BUFFER_READ_READY_Pos	(5U)
#define SDHC_NORMAL_IRQ_STATUS_BUFFER_READ_READY_Msk	(0x1U << SDHC_NORMAL_IRQ_STATUS_BUFFER_READ_READY_Pos)
#define SDHC_NORMAL_IRQ_STATUS_BUFFER_READ_READY	SDHC_NORMAL_IRQ_STATUS_BUFFER_READ_READY_Msk

#define SDHC_NORMAL_IRQ_STATUS_CARD_INSERTION_Pos	(6U)
#define SDHC_NORMAL_IRQ_STATUS_CARD_INSERTION_Msk	(0x1U << SDHC_NORMAL_IRQ_STATUS_CARD_INSERTION_Pos)
#define SDHC_NORMAL_IRQ_STATUS_CARD_INSERTION		SDHC_NORMAL_IRQ_STATUS_CARD_INSERTION_Msk

#define SDHC_NORMAL_IRQ_STATUS_CARD_REMOVAL_Pos		(7U)
#define SDHC_NORMAL_IRQ_STATUS_CARD_REMOVAL_Msk		(0x1U << SDHC_NORMAL_IRQ_STATUS_CARD_REMOVAL_Pos)
#define SDHC_NORMAL_IRQ_STATUS_CARD_REMOVAL		SDHC_NORMAL_IRQ_STATUS_CARD_REMOVAL_Msk

#define SDHC_NORMAL_IRQ_STATUS_CARD_INTERRUPT_Pos	(8U)
#define SDHC_NORMAL_IRQ_STATUS_CARD_INTERRUPT_Msk	(0x1U << SDHC_NORMAL_IRQ_STATUS_CARD_INTERRUPT_Pos)
#define SDHC_NORMAL_IRQ_STATUS_CARD_INTERRUPT		SDHC_NORMAL_IRQ_STATUS_CARD_INTERRUPT_Msk

#define SDHC_NORMAL_IRQ_STATUS_CARD_STATUS_FLAGS	(SDHC_NORMAL_IRQ_STATUS_CARD_INSERTION |	\
							SDHC_NORMAL_IRQ_STATUS_CARD_REMOVAL |		\
							SDHC_NORMAL_IRQ_STATUS_CARD_INTERRUPT)

#define SDHC_NORMAL_IRQ_STATUS_INT_A_Pos		(9U)
#define SDHC_NORMAL_IRQ_STATUS_INT_A_Msk		(0x1U << SDHC_NORMAL_IRQ_STATUS_INT_A_Pos)
#define SDHC_NORMAL_IRQ_STATUS_INT_A			SDHC_NORMAL_IRQ_STATUS_INT_A_Msk

#define SDHC_NORMAL_IRQ_STATUS_INT_B_Pos		(10U)
#define SDHC_NORMAL_IRQ_STATUS_INT_B_Msk		(0x1U << SDHC_NORMAL_IRQ_STATUS_INT_B_Pos)
#define SDHC_NORMAL_IRQ_STATUS_INT_B			SDHC_NORMAL_IRQ_STATUS_INT_B_Msk

#define SDHC_NORMAL_IRQ_STATUS_INT_C_Pos		(11U)
#define SDHC_NORMAL_IRQ_STATUS_INT_C_Msk		(0x1U << SDHC_NORMAL_IRQ_STATUS_INT_C_Pos)
#define SDHC_NORMAL_IRQ_STATUS_INT_C			SDHC_NORMAL_IRQ_STATUS_INT_C_Msk

#define SDHC_NORMAL_IRQ_STATUS_RE_TUNE_Pos		(12U)
#define SDHC_NORMAL_IRQ_STATUS_RE_TUNE_Msk		(0x1U << SDHC_NORMAL_IRQ_STATUS_RE_TUNE_Pos)
#define SDHC_NORMAL_IRQ_STATUS_RE_TUNE			SDHC_NORMAL_IRQ_STATUS_RE_TUNE_Msk

#define SDHC_NORMAL_IRQ_STATUS_ERROR_Pos		(15U)
#define SDHC_NORMAL_IRQ_STATUS_ERROR_Msk		(0x1U << SDHC_NORMAL_IRQ_STATUS_ERROR_Pos)
#define SDHC_NORMAL_IRQ_STATUS_ERROR			SDHC_NORMAL_IRQ_STATUS_ERROR_Msk

/**
 * ErrorInterruptStatus register (offset: 0x32)
 * 
 * Most definitions shared with ErrorInterruptStatusEnable and ErrorInterruptSignalEnable
 * (respectively at offsets 0x36 and 0x3A)
 */
#define SDHC_ERROR_IRQ_STATUS_CMD_TIMEOUT_Pos		(0U)
#define SDHC_ERROR_IRQ_STATUS_CMD_TIMEOUT_Msk		(0x1U << SDHC_ERROR_IRQ_STATUS_CMD_TIMEOUT_Pos)
#define SDHC_ERROR_IRQ_STATUS_CMD_TIMEOUT		SDHC_ERROR_IRQ_STATUS_CMD_TIMEOUT_Msk

#define SDHC_ERROR_IRQ_STATUS_CMD_CRC_ERROR_Pos		(1U)
#define SDHC_ERROR_IRQ_STATUS_CMD_CRC_ERROR_Msk		(0x1U << SDHC_ERROR_IRQ_STATUS_CMD_CRC_ERROR_Pos)
#define SDHC_ERROR_IRQ_STATUS_CMD_CRC_ERROR		SDHC_ERROR_IRQ_STATUS_CMD_CRC_ERROR_Msk

#define SDHC_ERROR_IRQ_STATUS_CMD_END_BIT_ERROR_Pos	(2U)
#define SDHC_ERROR_IRQ_STATUS_CMD_END_BIT_ERROR_Msk	(0x1U << SDHC_ERROR_IRQ_STATUS_CMD_END_BIT_ERROR_Pos)
#define SDHC_ERROR_IRQ_STATUS_CMD_END_BIT_ERROR	SDHC_ERROR_IRQ_STATUS_CMD_END_BIT_ERROR_Msk

#define SDHC_ERROR_IRQ_STATUS_CMD_INDEX_ERROR_Pos	(3U)
#define SDHC_ERROR_IRQ_STATUS_CMD_INDEX_ERROR_Msk	(0x1U << SDHC_ERROR_IRQ_STATUS_CMD_INDEX_ERROR_Pos)
#define SDHC_ERROR_IRQ_STATUS_CMD_INDEX_ERROR		SDHC_ERROR_IRQ_STATUS_CMD_INDEX_ERROR_Msk

#define SDHC_ERROR_IRQ_STATUS_COMMAND_PHASE_ERRORS	(SDHC_ERROR_IRQ_STATUS_CMD_INDEX_ERROR  |		\
							SDHC_ERROR_IRQ_STATUS_CMD_END_BIT_ERROR |		\
							SDHC_ERROR_IRQ_STATUS_CMD_CRC_ERROR |	\
							SDHC_ERROR_IRQ_STATUS_CMD_TIMEOUT)

#define SDHC_ERROR_IRQ_STATUS_DATA_TIMEOUT_Pos		(4U)
#define SDHC_ERROR_IRQ_STATUS_DATA_TIMEOUT_Msk		(0x1U << SDHC_ERROR_IRQ_STATUS_DATA_TIMEOUT_Pos)
#define SDHC_ERROR_IRQ_STATUS_DATA_TIMEOUT		SDHC_ERROR_IRQ_STATUS_DATA_TIMEOUT_Msk

#define SDHC_ERROR_IRQ_STATUS_DATA_CRC_ERROR_Pos	(5U)
#define SDHC_ERROR_IRQ_STATUS_DATA_CRC_ERROR_Msk	(0x1U << SDHC_ERROR_IRQ_STATUS_DATA_CRC_ERROR_Pos)
#define SDHC_ERROR_IRQ_STATUS_DATA_CRC_ERROR		SDHC_ERROR_IRQ_STATUS_DATA_CRC_ERROR_Msk

#define SDHC_ERROR_IRQ_STATUS_DATA_END_BIT_ERROR_Pos	(6U)
#define SDHC_ERROR_IRQ_STATUS_DATA_END_BIT_ERROR_Msk	(0x1U << SDHC_ERROR_IRQ_STATUS_DATA_END_BIT_ERROR_Pos)
#define SDHC_ERROR_IRQ_STATUS_DATA_END_BIT_ERROR	SDHC_ERROR_IRQ_STATUS_DATA_END_BIT_ERROR_Msk

#define SDHC_ERROR_IRQ_STATUS_DATA_PHASE_ERRORS		(SDHC_ERROR_IRQ_STATUS_DATA_END_BIT_ERROR |		\
							SDHC_ERROR_IRQ_STATUS_DATA_CRC_ERROR |		\
							SDHC_ERROR_IRQ_STATUS_DATA_TIMEOUT)

#define SDHC_ERROR_IRQ_STATUS_CURRENT_LIMIT_ERROR_Pos	(7U)
#define SDHC_ERROR_IRQ_STATUS_CURRENT_LIMIT_ERROR_Msk	(0x1U << SDHC_ERROR_IRQ_STATUS_CURRENT_LIMIT_ERROR_Pos)
#define SDHC_ERROR_IRQ_STATUS_CURRENT_LIMIT_ERROR	SDHC_ERROR_IRQ_STATUS_CURRENT_LIMIT_ERROR_Msk

#define SDHC_ERROR_IRQ_STATUS_AUTO_CMD_ERROR_Pos	(8U)
#define SDHC_ERROR_IRQ_STATUS_AUTO_CMD_ERROR_Msk	(0x1U << SDHC_ERROR_IRQ_STATUS_AUTO_CMD_ERROR_Pos)
#define SDHC_ERROR_IRQ_STATUS_AUTO_CMD_ERROR		SDHC_ERROR_IRQ_STATUS_AUTO_CMD_ERROR_Msk

#define SDHC_ERROR_IRQ_STATUS_ADMA_ERROR_Pos		(9U)
#define SDHC_ERROR_IRQ_STATUS_ADMA_ERROR_Msk		(0x1U << SDHC_ERROR_IRQ_STATUS_ADMA_ERROR_Pos)
#define SDHC_ERROR_IRQ_STATUS_ADMA_ERROR		SDHC_ERROR_IRQ_STATUS_ADMA_ERROR_Msk

#define SDHC_ERROR_IRQ_STATUS_TUNING_ERROR_Pos		(10U)
#define SDHC_ERROR_IRQ_STATUS_TUNING_ERROR_Msk		(0x1U << SDHC_ERROR_IRQ_STATUS_TUNING_ERROR_Pos)
#define SDHC_ERROR_IRQ_STATUS_TUNING_ERROR		SDHC_ERROR_IRQ_STATUS_TUNING_ERROR_Msk

#define SDHC_ERROR_IRQ_STATUS_VENDOR_DEFINED_Pos	(12U)
#define SDHC_ERROR_IRQ_STATUS_VENDOR_DEFINED_Msk	(0xFU << SDHC_ERROR_IRQ_STATUS_VENDOR_DEFINED_Pos)

#endif /* __REF_SDIF_H__ */